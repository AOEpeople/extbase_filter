language: php

php:
  - 7.0
  - 7.1
  - 7.2

env:
  - TYPO3_VERSION=^6.2 COVERAGE=0 FUNCTIONAL=0
  - TYPO3_VERSION=^7.6 COVERAGE=0 FUNCTIONAL=0
  - TYPO3_VERSION=^8.7 COVERAGE=0 FUNCTIONAL=0
  - TYPO3_VERSION=dev-master COVERAGE=0 FUNCTIONAL=0

matrix:
  exclude:
    - env: TYPO3_VERSION=^6.2 COVERAGE=0 FUNCTIONAL=0
      php: 7.0
    - env: TYPO3_VERSION=^6.2 COVERAGE=0 FUNCTIONAL=0
      php: 7.1
    - env: TYPO3_VERSION=^6.2 COVERAGE=0 FUNCTIONAL=0
      php: 7.2
  include:
    - env: TYPO3_VERSION=^7.6 COVERAGE=0 FUNCTIONAL=1
      php: 7.1
    - env: TYPO3_VERSION=^8.7 COVERAGE=0 FUNCTIONAL=1
      php: 7.1
    - env: TYPO3_VERSION=dev-master COVERAGE=0 FUNCTIONAL=1
      php: 7.1
  allow_failures:
    - env: TYPO3_VERSION=dev-master COVERAGE=0 FUNCTIONAL=1
    - env: TYPO3_VERSION=dev-master COVERAGE=0 FUNCTIONAL=0
    - php: 7.2

addons:
  apt:
    packages:
      - parallel

before_script:
  - composer self-update
  - composer require --dev typo3/cms="$TYPO3_VERSION"
  # Restore composer.json
  - git checkout composer.json
  - export UNIT_XML='.Build/vendor/nimut/testing-framework/res/Configuration/UnitTests.xml'
  - export FUNCTIONAL_XML='.Build/vendor/nimut/testing-framework/res/Configuration/FunctionalTests.xml'
  - export TYPO3_PATH_WEB="$(pwd)/.Build/Web"
  # Create extension symlink in typo3conf/ext folder
  - mkdir -p .Build/Web/typo3conf/ext
  - ln -snvf ../../../../. .Build/Web/typo3conf/ext/extbase_filter

script:
  - echo "Running unit tests";
  - OPT_COVERAGE=$([[ "$COVERAGE" == "1" ]] && echo "--coverage-clover=ut-coverage.clover --whitelist Classes" || echo;)
  - .Build/bin/phpunit --colors $OPT_COVERAGE -c $UNIT_XML Tests/Unit

  - echo "Running functional tests";
  - OPT_COVERAGE=$([[ "$COVERAGE" == "1" ]] && echo "--coverage-clover=ft-{}-coverage.clover --whitelist Classes" || echo;)
  - >
    export typo3DatabaseName="typo3";
    export typo3DatabaseHost="localhost";
    export typo3DatabaseUsername="root";
    export typo3DatabasePassword="";

    find 'Tests/Functional' -wholename '*Test.php' -o -name '*Test.php' | parallel --gnu 'echo "Running functional test suite {}"; .Build/bin/phpunit -c $FUNCTIONAL_XML $OPT_COVERAGE {}'

  # Upload code coverage data, if enabled
  - >
    if [[ "$COVERAGE" == "1" ]]; then
      echo "Uploading code coverage results";
      wget https://scrutinizer-ci.com/ocular.phar
      find . -wholename '*-coverage.clover' -o -name '*-coverage.clover' | xargs -i php ocular.phar code-coverage:upload --format=php-clover {}
    fi

  - >
    echo "Running php lint";
    find . -name \*.php ! -path "./.Build/*" | parallel --gnu php -d display_errors=stderr -l {} > /dev/null \;
